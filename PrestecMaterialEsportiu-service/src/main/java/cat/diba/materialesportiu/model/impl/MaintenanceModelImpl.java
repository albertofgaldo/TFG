/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cat.diba.materialesportiu.model.impl;

import aQute.bnd.annotation.ProviderType;

import cat.diba.materialesportiu.model.Maintenance;
import cat.diba.materialesportiu.model.MaintenanceModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Maintenance service. Represents a row in the &quot;PME_Maintenance&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link MaintenanceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MaintenanceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MaintenanceImpl
 * @see Maintenance
 * @see MaintenanceModel
 * @generated
 */
@ProviderType
public class MaintenanceModelImpl extends BaseModelImpl<Maintenance>
	implements MaintenanceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a maintenance model instance should use the {@link Maintenance} interface instead.
	 */
	public static final String TABLE_NAME = "PME_Maintenance";
	public static final Object[][] TABLE_COLUMNS = {
			{ "maintenanceId", Types.BIGINT },
			{ "activityId", Types.BIGINT },
			{ "label", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "isDone", Types.BOOLEAN },
			{ "loanId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("maintenanceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("activityId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("label", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("startDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("isDone", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("loanId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table PME_Maintenance (maintenanceId LONG not null primary key,activityId LONG,label VARCHAR(75) null,description VARCHAR(75) null,startDate DATE null,endDate DATE null,isDone BOOLEAN,loanId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table PME_Maintenance";
	public static final String ORDER_BY_JPQL = " ORDER BY maintenance.startDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY PME_Maintenance.startDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(cat.diba.materialesportiu.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.cat.diba.materialesportiu.model.Maintenance"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(cat.diba.materialesportiu.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.cat.diba.materialesportiu.model.Maintenance"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(cat.diba.materialesportiu.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.cat.diba.materialesportiu.model.Maintenance"),
			true);
	public static final long ACTIVITYID_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long ISDONE_COLUMN_BITMASK = 8L;
	public static final long LABEL_COLUMN_BITMASK = 16L;
	public static final long LOANID_COLUMN_BITMASK = 32L;
	public static final long STARTDATE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(cat.diba.materialesportiu.service.util.ServiceProps.get(
				"lock.expiration.time.cat.diba.materialesportiu.model.Maintenance"));

	public MaintenanceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _maintenanceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMaintenanceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _maintenanceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Maintenance.class;
	}

	@Override
	public String getModelClassName() {
		return Maintenance.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("maintenanceId", getMaintenanceId());
		attributes.put("activityId", getActivityId());
		attributes.put("label", getLabel());
		attributes.put("description", getDescription());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("isDone", getIsDone());
		attributes.put("loanId", getLoanId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long maintenanceId = (Long)attributes.get("maintenanceId");

		if (maintenanceId != null) {
			setMaintenanceId(maintenanceId);
		}

		Long activityId = (Long)attributes.get("activityId");

		if (activityId != null) {
			setActivityId(activityId);
		}

		String label = (String)attributes.get("label");

		if (label != null) {
			setLabel(label);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Boolean isDone = (Boolean)attributes.get("isDone");

		if (isDone != null) {
			setIsDone(isDone);
		}

		Long loanId = (Long)attributes.get("loanId");

		if (loanId != null) {
			setLoanId(loanId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getMaintenanceId() {
		return _maintenanceId;
	}

	@Override
	public void setMaintenanceId(long maintenanceId) {
		_maintenanceId = maintenanceId;
	}

	@Override
	public long getActivityId() {
		return _activityId;
	}

	@Override
	public void setActivityId(long activityId) {
		_columnBitmask |= ACTIVITYID_COLUMN_BITMASK;

		if (!_setOriginalActivityId) {
			_setOriginalActivityId = true;

			_originalActivityId = _activityId;
		}

		_activityId = activityId;
	}

	public long getOriginalActivityId() {
		return _originalActivityId;
	}

	@Override
	public String getLabel() {
		if (_label == null) {
			return "";
		}
		else {
			return _label;
		}
	}

	@Override
	public void setLabel(String label) {
		_columnBitmask |= LABEL_COLUMN_BITMASK;

		if (_originalLabel == null) {
			_originalLabel = _label;
		}

		_label = label;
	}

	public String getOriginalLabel() {
		return GetterUtil.getString(_originalLabel);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_columnBitmask = -1L;

		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public Boolean getIsDone() {
		return _isDone;
	}

	@Override
	public void setIsDone(Boolean isDone) {
		_columnBitmask |= ISDONE_COLUMN_BITMASK;

		if (!_setOriginalIsDone) {
			_setOriginalIsDone = true;

			_originalIsDone = _isDone;
		}

		_isDone = isDone;
	}

	public Boolean getOriginalIsDone() {
		return _originalIsDone;
	}

	@Override
	public long getLoanId() {
		return _loanId;
	}

	@Override
	public void setLoanId(long loanId) {
		_columnBitmask |= LOANID_COLUMN_BITMASK;

		if (!_setOriginalLoanId) {
			_setOriginalLoanId = true;

			_originalLoanId = _loanId;
		}

		_loanId = loanId;
	}

	public long getOriginalLoanId() {
		return _originalLoanId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Maintenance.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Maintenance toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Maintenance)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MaintenanceImpl maintenanceImpl = new MaintenanceImpl();

		maintenanceImpl.setMaintenanceId(getMaintenanceId());
		maintenanceImpl.setActivityId(getActivityId());
		maintenanceImpl.setLabel(getLabel());
		maintenanceImpl.setDescription(getDescription());
		maintenanceImpl.setStartDate(getStartDate());
		maintenanceImpl.setEndDate(getEndDate());
		maintenanceImpl.setIsDone(getIsDone());
		maintenanceImpl.setLoanId(getLoanId());
		maintenanceImpl.setGroupId(getGroupId());
		maintenanceImpl.setCompanyId(getCompanyId());
		maintenanceImpl.setUserId(getUserId());
		maintenanceImpl.setUserName(getUserName());
		maintenanceImpl.setCreateDate(getCreateDate());
		maintenanceImpl.setModifiedDate(getModifiedDate());

		maintenanceImpl.resetOriginalValues();

		return maintenanceImpl;
	}

	@Override
	public int compareTo(Maintenance maintenance) {
		int value = 0;

		value = DateUtil.compareTo(getStartDate(), maintenance.getStartDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Maintenance)) {
			return false;
		}

		Maintenance maintenance = (Maintenance)obj;

		long primaryKey = maintenance.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		MaintenanceModelImpl maintenanceModelImpl = this;

		maintenanceModelImpl._originalActivityId = maintenanceModelImpl._activityId;

		maintenanceModelImpl._setOriginalActivityId = false;

		maintenanceModelImpl._originalLabel = maintenanceModelImpl._label;

		maintenanceModelImpl._originalIsDone = maintenanceModelImpl._isDone;

		maintenanceModelImpl._setOriginalIsDone = false;

		maintenanceModelImpl._originalLoanId = maintenanceModelImpl._loanId;

		maintenanceModelImpl._setOriginalLoanId = false;

		maintenanceModelImpl._originalGroupId = maintenanceModelImpl._groupId;

		maintenanceModelImpl._setOriginalGroupId = false;

		maintenanceModelImpl._originalCompanyId = maintenanceModelImpl._companyId;

		maintenanceModelImpl._setOriginalCompanyId = false;

		maintenanceModelImpl._setModifiedDate = false;

		maintenanceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Maintenance> toCacheModel() {
		MaintenanceCacheModel maintenanceCacheModel = new MaintenanceCacheModel();

		maintenanceCacheModel.maintenanceId = getMaintenanceId();

		maintenanceCacheModel.activityId = getActivityId();

		maintenanceCacheModel.label = getLabel();

		String label = maintenanceCacheModel.label;

		if ((label != null) && (label.length() == 0)) {
			maintenanceCacheModel.label = null;
		}

		maintenanceCacheModel.description = getDescription();

		String description = maintenanceCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			maintenanceCacheModel.description = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			maintenanceCacheModel.startDate = startDate.getTime();
		}
		else {
			maintenanceCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			maintenanceCacheModel.endDate = endDate.getTime();
		}
		else {
			maintenanceCacheModel.endDate = Long.MIN_VALUE;
		}

		maintenanceCacheModel.isDone = getIsDone();

		maintenanceCacheModel.loanId = getLoanId();

		maintenanceCacheModel.groupId = getGroupId();

		maintenanceCacheModel.companyId = getCompanyId();

		maintenanceCacheModel.userId = getUserId();

		maintenanceCacheModel.userName = getUserName();

		String userName = maintenanceCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			maintenanceCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			maintenanceCacheModel.createDate = createDate.getTime();
		}
		else {
			maintenanceCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			maintenanceCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			maintenanceCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return maintenanceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{maintenanceId=");
		sb.append(getMaintenanceId());
		sb.append(", activityId=");
		sb.append(getActivityId());
		sb.append(", label=");
		sb.append(getLabel());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", isDone=");
		sb.append(getIsDone());
		sb.append(", loanId=");
		sb.append(getLoanId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("cat.diba.materialesportiu.model.Maintenance");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>maintenanceId</column-name><column-value><![CDATA[");
		sb.append(getMaintenanceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activityId</column-name><column-value><![CDATA[");
		sb.append(getActivityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>label</column-name><column-value><![CDATA[");
		sb.append(getLabel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isDone</column-name><column-value><![CDATA[");
		sb.append(getIsDone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loanId</column-name><column-value><![CDATA[");
		sb.append(getLoanId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Maintenance.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Maintenance.class, ModelWrapper.class
		};
	private long _maintenanceId;
	private long _activityId;
	private long _originalActivityId;
	private boolean _setOriginalActivityId;
	private String _label;
	private String _originalLabel;
	private String _description;
	private Date _startDate;
	private Date _endDate;
	private Boolean _isDone;
	private Boolean _originalIsDone;
	private boolean _setOriginalIsDone;
	private long _loanId;
	private long _originalLoanId;
	private boolean _setOriginalLoanId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private Maintenance _escapedModel;
}